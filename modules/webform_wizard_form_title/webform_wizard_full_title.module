<?php

/**
 * @file
 * Contains webform_wizard_full_title.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_webform_submission_form_alter().
 */
function webform_wizard_full_title_form_webform_submission_form_alter(array &$form, FormStateInterface $form_state, $form_id) {

  // Make sure we're on a multi step form.
  if (!is_array($form_state->get('pages')) || empty($form_state->get('current_page'))) {
    return;
  }

  // Get the current page, this will allow us to check the settings.
  $pageKey = $form_state->get('current_page');

  // If there's a title, and we want to to override the title, make it so.
  if (!empty($form['elements'][$pageKey]['#title'])
    && !empty($form['elements'][$pageKey]['#override_page_title'])
    && $form['elements'][$pageKey]['#override_page_title'] == TRUE) {
    $form['#title'] = $form['elements'][$pageKey]['#title'];
  }
}

/**
 * Method to add checkbox to webform wizard page to allow title override.
 */
function webform_wizard_full_title_form_webform_ui_element_form_alter(&$form, FormStateInterface $form_state) {
  // If we're not on a webform wizard page element, do nothing.
  if (empty($form['properties']['type']['#value']) || $form['properties']['type']['#value'] != 'webform_wizard_page') {
    return;
  }

  // Get the default value or previous stored value.
  $custom_properties = $form_state->get('custom_properties');

  // Create the element and add it to the config form.
  $form['properties']['element']['page_title_override'] = [
    '#type' => 'checkbox',
    '#title' => t('Override page title with above title'),
    '#description' => t('Check this box to change the name of the page when the user is on this wizard page'),
    '#default_value' => empty($custom_properties['override_page_title']) ? '' : $custom_properties['override_page_title'],
    '#parents' => ['properties', 'override_page_title'],
    '#weight' => 0,
  ];

}
